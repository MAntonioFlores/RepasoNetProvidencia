//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MFloresEmpresaEntities : DbContext
    {
        public MFloresEmpresaEntities()
            : base("name=MFloresEmpresaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Empresa> Empresa { get; set; }
    
        public virtual int AddEmpresa(string nombre, string logo, string uRL, string dirección)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var direcciónParameter = dirección != null ?
                new ObjectParameter("Dirección", dirección) :
                new ObjectParameter("Dirección", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmpresa", nombreParameter, logoParameter, uRLParameter, direcciónParameter);
        }
    
        public virtual int DeleteEmpresa(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmpresa", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetAllEmpresa_Result> GetAllEmpresa()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEmpresa_Result>("GetAllEmpresa");
        }
    
        public virtual ObjectResult<GetByIdEmpresa_Result> GetByIdEmpresa(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdEmpresa_Result>("GetByIdEmpresa", idEmpresaParameter);
        }
    
        public virtual int UpdateEmpresa(Nullable<int> idEmpresa, string nombre, string logo, string uRL, string dirección)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var direcciónParameter = dirección != null ?
                new ObjectParameter("Dirección", dirección) :
                new ObjectParameter("Dirección", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEmpresa", idEmpresaParameter, nombreParameter, logoParameter, uRLParameter, direcciónParameter);
        }
    }
}
